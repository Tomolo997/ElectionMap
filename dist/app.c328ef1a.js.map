{"version":3,"sources":["app.js"],"names":["mapboxAccessToken","map","L","maxZoom","minZoom","dragging","doubleClickZoom","setView","tileLayer","id","tileSize","zoomOffset","addTo","geoJson","statesData","mapa","mapH","USAmap","document","querySelector","states","Array","from","getElementsByTagName","mapOfAlaska","statesAlaska","mapOfHawai","statesHawai","controls","querySelectorAll","i","length","element","remove","console","log","splice","trumpProg","bidenProg","trumpOnScreenVotes","bidenOnScreenVotes","originalStates","statesPath","statesElectoral","statesNames","electoralVotes","trumpCountriesWon","bidenCountriesWon","features","push","properties","name","setAttribute","clicked","trumpVotes","bidenVotes","forEach","el","addEventListener","e","target","getAttribute","bidenVOOtes","trumpVOotes","dataset","candidate","votes","trumpVotesFinal","reduce","acc","cur","bidenVotesFinal","style","width","textContent"],"mappings":"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","file":"app.c328ef1a.js","sourceRoot":"..","sourcesContent":["let mapboxAccessToken =\r\n  'pk.eyJ1IjoidG9tYXpvdnNlbmphayIsImEiOiJja2lxYTRhd28wZGoxMnhwamF3MTI1YjA5In0.cCRWR0uclCv1ecYzmJ0Y_w';\r\nlet map = L.map('map', {\r\n  maxZoom: 4.5,\r\n  minZoom: 4.5,\r\n  dragging: false,\r\n  doubleClickZoom: false,\r\n}).setView([37.8, -96], 5);\r\n\r\nL.tileLayer(\r\n  'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' +\r\n    mapboxAccessToken,\r\n  {\r\n    id: 'mapbox/light-v9',\r\n    tileSize: 512,\r\n    zoomOffset: -1,\r\n  }\r\n).addTo(map);\r\nL.geoJson(statesData).addTo(map);\r\n//////////////////////////////////////////////////////////////\r\n\r\nlet mapa = L.map('mapALaska', {\r\n  maxZoom: 3,\r\n  minZoom: 3,\r\n  dragging: false,\r\n  doubleClickZoom: false,\r\n}).setView([64, -157], 3);\r\n\r\nL.tileLayer(\r\n  'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' +\r\n    mapboxAccessToken,\r\n  {\r\n    id: 'mapbox/light-v9',\r\n    tileSize: 512,\r\n    zoomOffset: -1,\r\n  }\r\n).addTo(mapa);\r\nL.geoJson(statesData).addTo(mapa);\r\n//havai\r\nlet mapH = L.map('mapHawai', {\r\n  dragging: false,\r\n  doubleClickZoom: false,\r\n}).setView([20.761906909670278, -157.5727520449764], 6);\r\n\r\nL.tileLayer(\r\n  'https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=' +\r\n    mapboxAccessToken,\r\n  {\r\n    id: 'mapbox/light-v9',\r\n    tileSize: 512,\r\n    zoomOffset: -1,\r\n  }\r\n).addTo(mapH);\r\nL.geoJson(statesData).addTo(mapH);\r\n//////////////////////////////////////////////////////////////\r\nconst USAmap = document.querySelector('.mapOfUSA');\r\nconst states = Array.from(USAmap.getElementsByTagName('path'));\r\nconst mapOfAlaska = document.querySelector('.mapOfAlaska');\r\nconst statesAlaska = Array.from(mapOfAlaska.getElementsByTagName('path'));\r\n\r\nconst mapOfHawai = document.querySelector('.mapOfHawai');\r\nconst statesHawai = Array.from(mapOfHawai.getElementsByTagName('path'));\r\n\r\nlet controls = document.querySelectorAll('.leaflet-top');\r\nfor (let i = 0; i < controls.length; i++) {\r\n  const element = controls[i];\r\n  element.remove();\r\n}\r\n\r\nconsole.log(controls);\r\n\r\nstates.splice(1, 1, statesAlaska[1]);\r\nstates.splice(11, 1, statesHawai[11]);\r\nconsole.log(states);\r\n\r\nconst trumpProg = document.querySelector('.progressBar--trump');\r\nconst bidenProg = document.querySelector('.progressBar--biden');\r\nconst trumpOnScreenVotes = document.querySelector('.electoralPoints-Trump');\r\nconst bidenOnScreenVotes = document.querySelector('.electoralPoints-Biden');\r\nconst originalStates = {\r\n  statesPath: states,\r\n  statesElectoral: [],\r\n  statesNames: [],\r\n  electoralVotes: {},\r\n  trumpCountriesWon: [],\r\n  bidenCountriesWon: [],\r\n};\r\n\r\n//adding the classes and ids and so on\r\n//electoral votes for every country\r\nfor (let i = 0; i < statesData.features.length; i++) {\r\n  const element = statesData.features[i];\r\n  originalStates.statesElectoral.push(element.properties.electoralVotes);\r\n  //my key = country\r\n  //my value = electoral votes\r\n  originalStates.electoralVotes[element.properties.name] =\r\n    element.properties.electoralVotes;\r\n}\r\n\r\nfor (let i = 0; i < statesData.features.length - 1; i++) {\r\n  const element = statesData.features[i];\r\n  originalStates.statesNames.push(element.properties.name);\r\n}\r\n\r\n//vsakemu pathu dodati svojo kurčevo državo\r\n\r\nfor (let i = 0; i < states.length; i++) {\r\n  const element = states[i];\r\n  element.setAttribute('id', originalStates.statesNames[i]);\r\n  element.setAttribute('fill', 'transparent');\r\n  element.setAttribute('data-votes', originalStates.statesElectoral[i]);\r\n}\r\n\r\nlet clicked = 0;\r\nlet trumpVotes = 0;\r\nlet bidenVotes = 0;\r\n//adding the classes and ids and so on\r\n//\r\n//\r\n//\r\n//clicked events\r\nstates.forEach((el) => {\r\n  el.addEventListener('click', function (e) {\r\n    if (e.target.getAttribute('fill') === '#3388ff') {\r\n      e.target.setAttribute('fill', '#ff0000');\r\n      //add to the countries won\r\n    } else {\r\n      e.target.setAttribute('fill', '#3388ff');\r\n      //add to the biden victory\r\n    }\r\n    // id = ime\r\n    // dataset.electoral => electoral votes of the state\r\n    //če ima fill enak moder, dodaj k bidenu\r\n    if (e.target.getAttribute('fill') === '#3388ff') {\r\n      e.target.setAttribute('data-candidate', 'biden');\r\n      //vse države soe.target.id že podane k obema kandidatoma\r\n    }\r\n    if (e.target.getAttribute('fill') === '#ff0000') {\r\n      console.log('Trumps Country ');\r\n      e.target.setAttribute('data-candidate', 'trump');\r\n    }\r\n\r\n    //get all the paths = >\r\n    const bidenVOOtes = [0];\r\n    const trumpVOotes = [0];\r\n    for (let i = 0; i < states.length; i++) {\r\n      const element = states[i];\r\n      if (element.dataset.candidate === 'biden') {\r\n        bidenVOOtes.push(+element.dataset.votes);\r\n      } else if (element.dataset.candidate === 'trump') {\r\n        trumpVOotes.push(+element.dataset.votes);\r\n      }\r\n    }\r\n    console.log(bidenVOOtes);\r\n    console.log(trumpVOotes);\r\n    let trumpVotesFinal = trumpVOotes.reduce((acc, cur) => acc + cur);\r\n    console.log('trump Votes ' + trumpVotesFinal);\r\n    let bidenVotesFinal = bidenVOOtes.reduce((acc, cur) => acc + cur);\r\n    console.log('biden Votes ' + bidenVotesFinal);\r\n\r\n    // width => je enako votson trumpProg bidenProg\r\n    //novi width je tist , kateri je trenuten votes\r\n\r\n    trumpProg.style.width = trumpVotesFinal * 1.86 + 'px';\r\n    bidenProg.style.width = bidenVotesFinal * 1.86 + 'px';\r\n\r\n    trumpOnScreenVotes.textContent = trumpVotesFinal;\r\n    bidenOnScreenVotes.textContent = bidenVotesFinal;\r\n  });\r\n});\r\n\r\n//To do :\r\n"]}